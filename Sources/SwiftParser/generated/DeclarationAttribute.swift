
//// Automatically Generated by generate-swiftparser
//// Do Not Edit Directly!
//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2022 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://swift.org/LICENSE.txt for license information
// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//


@_spi(RawSyntax) import SwiftSyntax

extension Parser {
  enum DeclarationAttribute: RawTokenKindSubset {
    case _silgen_name
    
    case available
    
    case objc
    
    case dynamicCallable
    
    case main
    
    case _exported
    
    case dynamicMemberLookup
    
    case NSCopying
    
    case IBAction
    
    case IBDesignable
    
    case IBInspectable
    
    case IBOutlet
    
    case NSManaged
    
    case LLDBDebuggerFunction
    
    case UIApplicationMain
    
    case unsafe_no_objc_tagged_pointer
    
    case inline
    
    case _semantics
    
    case _transparent
    
    case requires_stored_property_inits
    
    case nonobjc
    
    case _fixed_layout
    
    case inlinable
    
    case _specialize
    
    case objcMembers
    
    case _compilerInitialized
    
    case _hasStorage
    
    case __raw_doc_comment
    
    case _effects
    
    case __objc_bridged
    
    case NSApplicationMain
    
    case _objc_non_lazy_realization
    
    case __synthesized_protocol
    
    case testable
    
    case _alignment
    
    case atRethrows
    
    case _swift_native_objc_runtime_base
    
    case warn_unqualified_access
    
    case _show_in_interface
    
    case _cdecl
    
    case usableFromInline
    
    case discardableResult
    
    case GKInspectable
    
    case _implements
    
    case _objcRuntimeName
    
    case _staticInitializeObjCMetadata
    
    case _restatedObjCConformance
    
    case _objcImplementation
    
    case _optimize
    
    case _clangImporterSynthesizedType
    
    case _weakLinked
    
    case frozen
    
    case _frozen
    
    case _forbidSerializingReference
    
    case _hasInitialValue
    
    case _nonoverride
    
    case _dynamicReplacement
    
    case _borrowed
    
    case _private
    
    case _alwaysEmitIntoClient
    
    case _implementationOnly
    
    case _custom
    
    case propertyWrapper
    
    case _disfavoredOverload
    
    case resultBuilder
    
    case _projectedValueProperty
    
    case _nonEphemeral
    
    case differentiable
    
    case _hasMissingDesignatedInitializers
    
    case _inheritsConvenienceInitializers
    
    case _typeEraser
    
    case IBSegueAction
    
    case _originallyDefinedIn
    
    case derivative
    
    case _spi
    
    case transpose
    
    case noDerivative
    
    case globalActor
    
    case _specializeExtension
    
    case Sendable
    
    case _marker
    
    case atReasync
    
    case _unsafeInheritExecutor
    
    case _implicitSelfCapture
    
    case _inheritActorContext
    
    case _eagerMove
    
    case _noEagerMove
    
    case _assemblyVision
    
    case _nonSendable
    
    case _noImplicitCopy
    
    case _noLocks
    
    case _noAllocation
    
    case preconcurrency
    
    case _unavailableFromAsync
    
    case exclusivity
    
    case _backDeploy
    
    case _moveOnly
    
    case _alwaysEmitConformanceMetadata
    
    case _expose
    
    case typeWrapper
    
    case _spiOnly
    
    case _documentation
    
    case typeWrapperIgnored
    
    case _noMetadata
    
    case runtimeMetadata
    
    case _spi_available
    
    init?(lexeme: Lexer.Lexeme) {
      switch lexeme {
      case RawTokenKindMatch(._silgen_name): 
        self = ._silgen_name
      case RawTokenKindMatch(.available): 
        self = .available
      case RawTokenKindMatch(.objc): 
        self = .objc
      case RawTokenKindMatch(.dynamicCallable): 
        self = .dynamicCallable
      case RawTokenKindMatch(.main): 
        self = .main
      case RawTokenKindMatch(._exported): 
        self = ._exported
      case RawTokenKindMatch(.dynamicMemberLookup): 
        self = .dynamicMemberLookup
      case RawTokenKindMatch(.NSCopying): 
        self = .NSCopying
      case RawTokenKindMatch(.IBAction): 
        self = .IBAction
      case RawTokenKindMatch(.IBDesignable): 
        self = .IBDesignable
      case RawTokenKindMatch(.IBInspectable): 
        self = .IBInspectable
      case RawTokenKindMatch(.IBOutlet): 
        self = .IBOutlet
      case RawTokenKindMatch(.NSManaged): 
        self = .NSManaged
      case RawTokenKindMatch(.LLDBDebuggerFunction): 
        self = .LLDBDebuggerFunction
      case RawTokenKindMatch(.UIApplicationMain): 
        self = .UIApplicationMain
      case RawTokenKindMatch(.unsafe_no_objc_tagged_pointer): 
        self = .unsafe_no_objc_tagged_pointer
      case RawTokenKindMatch(.inline): 
        self = .inline
      case RawTokenKindMatch(._semantics): 
        self = ._semantics
      case RawTokenKindMatch(._transparent): 
        self = ._transparent
      case RawTokenKindMatch(.requires_stored_property_inits): 
        self = .requires_stored_property_inits
      case RawTokenKindMatch(.nonobjc): 
        self = .nonobjc
      case RawTokenKindMatch(._fixed_layout): 
        self = ._fixed_layout
      case RawTokenKindMatch(.inlinable): 
        self = .inlinable
      case RawTokenKindMatch(._specialize): 
        self = ._specialize
      case RawTokenKindMatch(.objcMembers): 
        self = .objcMembers
      case RawTokenKindMatch(._compilerInitialized): 
        self = ._compilerInitialized
      case RawTokenKindMatch(._hasStorage): 
        self = ._hasStorage
      case RawTokenKindMatch(.__raw_doc_comment): 
        self = .__raw_doc_comment
      case RawTokenKindMatch(._effects): 
        self = ._effects
      case RawTokenKindMatch(.__objc_bridged): 
        self = .__objc_bridged
      case RawTokenKindMatch(.NSApplicationMain): 
        self = .NSApplicationMain
      case RawTokenKindMatch(._objc_non_lazy_realization): 
        self = ._objc_non_lazy_realization
      case RawTokenKindMatch(.__synthesized_protocol): 
        self = .__synthesized_protocol
      case RawTokenKindMatch(.testable): 
        self = .testable
      case RawTokenKindMatch(._alignment): 
        self = ._alignment
      case RawTokenKindMatch(.rethrows): 
        self = .atRethrows
      case RawTokenKindMatch(._swift_native_objc_runtime_base): 
        self = ._swift_native_objc_runtime_base
      case RawTokenKindMatch(.warn_unqualified_access): 
        self = .warn_unqualified_access
      case RawTokenKindMatch(._show_in_interface): 
        self = ._show_in_interface
      case RawTokenKindMatch(._cdecl): 
        self = ._cdecl
      case RawTokenKindMatch(.usableFromInline): 
        self = .usableFromInline
      case RawTokenKindMatch(.discardableResult): 
        self = .discardableResult
      case RawTokenKindMatch(.GKInspectable): 
        self = .GKInspectable
      case RawTokenKindMatch(._implements): 
        self = ._implements
      case RawTokenKindMatch(._objcRuntimeName): 
        self = ._objcRuntimeName
      case RawTokenKindMatch(._staticInitializeObjCMetadata): 
        self = ._staticInitializeObjCMetadata
      case RawTokenKindMatch(._restatedObjCConformance): 
        self = ._restatedObjCConformance
      case RawTokenKindMatch(._objcImplementation): 
        self = ._objcImplementation
      case RawTokenKindMatch(._optimize): 
        self = ._optimize
      case RawTokenKindMatch(._clangImporterSynthesizedType): 
        self = ._clangImporterSynthesizedType
      case RawTokenKindMatch(._weakLinked): 
        self = ._weakLinked
      case RawTokenKindMatch(.frozen): 
        self = .frozen
      case RawTokenKindMatch(._frozen): 
        self = ._frozen
      case RawTokenKindMatch(._forbidSerializingReference): 
        self = ._forbidSerializingReference
      case RawTokenKindMatch(._hasInitialValue): 
        self = ._hasInitialValue
      case RawTokenKindMatch(._nonoverride): 
        self = ._nonoverride
      case RawTokenKindMatch(._dynamicReplacement): 
        self = ._dynamicReplacement
      case RawTokenKindMatch(._borrowed): 
        self = ._borrowed
      case RawTokenKindMatch(._private): 
        self = ._private
      case RawTokenKindMatch(._alwaysEmitIntoClient): 
        self = ._alwaysEmitIntoClient
      case RawTokenKindMatch(._implementationOnly): 
        self = ._implementationOnly
      case RawTokenKindMatch(._custom): 
        self = ._custom
      case RawTokenKindMatch(.propertyWrapper): 
        self = .propertyWrapper
      case RawTokenKindMatch(._disfavoredOverload): 
        self = ._disfavoredOverload
      case RawTokenKindMatch(.resultBuilder): 
        self = .resultBuilder
      case RawTokenKindMatch(._projectedValueProperty): 
        self = ._projectedValueProperty
      case RawTokenKindMatch(._nonEphemeral): 
        self = ._nonEphemeral
      case RawTokenKindMatch(.differentiable): 
        self = .differentiable
      case RawTokenKindMatch(._hasMissingDesignatedInitializers): 
        self = ._hasMissingDesignatedInitializers
      case RawTokenKindMatch(._inheritsConvenienceInitializers): 
        self = ._inheritsConvenienceInitializers
      case RawTokenKindMatch(._typeEraser): 
        self = ._typeEraser
      case RawTokenKindMatch(.IBSegueAction): 
        self = .IBSegueAction
      case RawTokenKindMatch(._originallyDefinedIn): 
        self = ._originallyDefinedIn
      case RawTokenKindMatch(.derivative): 
        self = .derivative
      case RawTokenKindMatch(._spi): 
        self = ._spi
      case RawTokenKindMatch(.transpose): 
        self = .transpose
      case RawTokenKindMatch(.noDerivative): 
        self = .noDerivative
      case RawTokenKindMatch(.globalActor): 
        self = .globalActor
      case RawTokenKindMatch(._specializeExtension): 
        self = ._specializeExtension
      case RawTokenKindMatch(.Sendable): 
        self = .Sendable
      case RawTokenKindMatch(._marker): 
        self = ._marker
      case RawTokenKindMatch(.reasync): 
        self = .atReasync
      case RawTokenKindMatch(._unsafeInheritExecutor): 
        self = ._unsafeInheritExecutor
      case RawTokenKindMatch(._implicitSelfCapture): 
        self = ._implicitSelfCapture
      case RawTokenKindMatch(._inheritActorContext): 
        self = ._inheritActorContext
      case RawTokenKindMatch(._eagerMove): 
        self = ._eagerMove
      case RawTokenKindMatch(._noEagerMove): 
        self = ._noEagerMove
      case RawTokenKindMatch(._assemblyVision): 
        self = ._assemblyVision
      case RawTokenKindMatch(._nonSendable): 
        self = ._nonSendable
      case RawTokenKindMatch(._noImplicitCopy): 
        self = ._noImplicitCopy
      case RawTokenKindMatch(._noLocks): 
        self = ._noLocks
      case RawTokenKindMatch(._noAllocation): 
        self = ._noAllocation
      case RawTokenKindMatch(.preconcurrency): 
        self = .preconcurrency
      case RawTokenKindMatch(._unavailableFromAsync): 
        self = ._unavailableFromAsync
      case RawTokenKindMatch(.exclusivity): 
        self = .exclusivity
      case RawTokenKindMatch(._backDeploy): 
        self = ._backDeploy
      case RawTokenKindMatch(._moveOnly): 
        self = ._moveOnly
      case RawTokenKindMatch(._alwaysEmitConformanceMetadata): 
        self = ._alwaysEmitConformanceMetadata
      case RawTokenKindMatch(._expose): 
        self = ._expose
      case RawTokenKindMatch(.typeWrapper): 
        self = .typeWrapper
      case RawTokenKindMatch(._spiOnly): 
        self = ._spiOnly
      case RawTokenKindMatch(._documentation): 
        self = ._documentation
      case RawTokenKindMatch(.typeWrapperIgnored): 
        self = .typeWrapperIgnored
      case RawTokenKindMatch(._noMetadata): 
        self = ._noMetadata
      case RawTokenKindMatch(.runtimeMetadata): 
        self = .runtimeMetadata
      case RawTokenKindMatch(.rethrows): 
        self = .atRethrows
      case RawTokenKindMatch(._spi_available): 
        self = ._spi_available
      default: 
        return nil
      }
    }
    
    var rawTokenKind: RawTokenKind {
      switch self {
      case ._silgen_name: 
        return .keyword(._silgen_name)
      case .available: 
        return .keyword(.available)
      case .objc: 
        return .keyword(.objc)
      case .dynamicCallable: 
        return .keyword(.dynamicCallable)
      case .main: 
        return .keyword(.main)
      case ._exported: 
        return .keyword(._exported)
      case .dynamicMemberLookup: 
        return .keyword(.dynamicMemberLookup)
      case .NSCopying: 
        return .keyword(.NSCopying)
      case .IBAction: 
        return .keyword(.IBAction)
      case .IBDesignable: 
        return .keyword(.IBDesignable)
      case .IBInspectable: 
        return .keyword(.IBInspectable)
      case .IBOutlet: 
        return .keyword(.IBOutlet)
      case .NSManaged: 
        return .keyword(.NSManaged)
      case .LLDBDebuggerFunction: 
        return .keyword(.LLDBDebuggerFunction)
      case .UIApplicationMain: 
        return .keyword(.UIApplicationMain)
      case .unsafe_no_objc_tagged_pointer: 
        return .keyword(.unsafe_no_objc_tagged_pointer)
      case .inline: 
        return .keyword(.inline)
      case ._semantics: 
        return .keyword(._semantics)
      case ._transparent: 
        return .keyword(._transparent)
      case .requires_stored_property_inits: 
        return .keyword(.requires_stored_property_inits)
      case .nonobjc: 
        return .keyword(.nonobjc)
      case ._fixed_layout: 
        return .keyword(._fixed_layout)
      case .inlinable: 
        return .keyword(.inlinable)
      case ._specialize: 
        return .keyword(._specialize)
      case .objcMembers: 
        return .keyword(.objcMembers)
      case ._compilerInitialized: 
        return .keyword(._compilerInitialized)
      case ._hasStorage: 
        return .keyword(._hasStorage)
      case .__raw_doc_comment: 
        return .keyword(.__raw_doc_comment)
      case ._effects: 
        return .keyword(._effects)
      case .__objc_bridged: 
        return .keyword(.__objc_bridged)
      case .NSApplicationMain: 
        return .keyword(.NSApplicationMain)
      case ._objc_non_lazy_realization: 
        return .keyword(._objc_non_lazy_realization)
      case .__synthesized_protocol: 
        return .keyword(.__synthesized_protocol)
      case .testable: 
        return .keyword(.testable)
      case ._alignment: 
        return .keyword(._alignment)
      case .atRethrows: 
        return .keyword(.rethrows)
      case ._swift_native_objc_runtime_base: 
        return .keyword(._swift_native_objc_runtime_base)
      case .warn_unqualified_access: 
        return .keyword(.warn_unqualified_access)
      case ._show_in_interface: 
        return .keyword(._show_in_interface)
      case ._cdecl: 
        return .keyword(._cdecl)
      case .usableFromInline: 
        return .keyword(.usableFromInline)
      case .discardableResult: 
        return .keyword(.discardableResult)
      case .GKInspectable: 
        return .keyword(.GKInspectable)
      case ._implements: 
        return .keyword(._implements)
      case ._objcRuntimeName: 
        return .keyword(._objcRuntimeName)
      case ._staticInitializeObjCMetadata: 
        return .keyword(._staticInitializeObjCMetadata)
      case ._restatedObjCConformance: 
        return .keyword(._restatedObjCConformance)
      case ._objcImplementation: 
        return .keyword(._objcImplementation)
      case ._optimize: 
        return .keyword(._optimize)
      case ._clangImporterSynthesizedType: 
        return .keyword(._clangImporterSynthesizedType)
      case ._weakLinked: 
        return .keyword(._weakLinked)
      case .frozen: 
        return .keyword(.frozen)
      case ._frozen: 
        return .keyword(._frozen)
      case ._forbidSerializingReference: 
        return .keyword(._forbidSerializingReference)
      case ._hasInitialValue: 
        return .keyword(._hasInitialValue)
      case ._nonoverride: 
        return .keyword(._nonoverride)
      case ._dynamicReplacement: 
        return .keyword(._dynamicReplacement)
      case ._borrowed: 
        return .keyword(._borrowed)
      case ._private: 
        return .keyword(._private)
      case ._alwaysEmitIntoClient: 
        return .keyword(._alwaysEmitIntoClient)
      case ._implementationOnly: 
        return .keyword(._implementationOnly)
      case ._custom: 
        return .keyword(._custom)
      case .propertyWrapper: 
        return .keyword(.propertyWrapper)
      case ._disfavoredOverload: 
        return .keyword(._disfavoredOverload)
      case .resultBuilder: 
        return .keyword(.resultBuilder)
      case ._projectedValueProperty: 
        return .keyword(._projectedValueProperty)
      case ._nonEphemeral: 
        return .keyword(._nonEphemeral)
      case .differentiable: 
        return .keyword(.differentiable)
      case ._hasMissingDesignatedInitializers: 
        return .keyword(._hasMissingDesignatedInitializers)
      case ._inheritsConvenienceInitializers: 
        return .keyword(._inheritsConvenienceInitializers)
      case ._typeEraser: 
        return .keyword(._typeEraser)
      case .IBSegueAction: 
        return .keyword(.IBSegueAction)
      case ._originallyDefinedIn: 
        return .keyword(._originallyDefinedIn)
      case .derivative: 
        return .keyword(.derivative)
      case ._spi: 
        return .keyword(._spi)
      case .transpose: 
        return .keyword(.transpose)
      case .noDerivative: 
        return .keyword(.noDerivative)
      case .globalActor: 
        return .keyword(.globalActor)
      case ._specializeExtension: 
        return .keyword(._specializeExtension)
      case .Sendable: 
        return .keyword(.Sendable)
      case ._marker: 
        return .keyword(._marker)
      case .atReasync: 
        return .keyword(.reasync)
      case ._unsafeInheritExecutor: 
        return .keyword(._unsafeInheritExecutor)
      case ._implicitSelfCapture: 
        return .keyword(._implicitSelfCapture)
      case ._inheritActorContext: 
        return .keyword(._inheritActorContext)
      case ._eagerMove: 
        return .keyword(._eagerMove)
      case ._noEagerMove: 
        return .keyword(._noEagerMove)
      case ._assemblyVision: 
        return .keyword(._assemblyVision)
      case ._nonSendable: 
        return .keyword(._nonSendable)
      case ._noImplicitCopy: 
        return .keyword(._noImplicitCopy)
      case ._noLocks: 
        return .keyword(._noLocks)
      case ._noAllocation: 
        return .keyword(._noAllocation)
      case .preconcurrency: 
        return .keyword(.preconcurrency)
      case ._unavailableFromAsync: 
        return .keyword(._unavailableFromAsync)
      case .exclusivity: 
        return .keyword(.exclusivity)
      case ._backDeploy: 
        return .keyword(._backDeploy)
      case ._moveOnly: 
        return .keyword(._moveOnly)
      case ._alwaysEmitConformanceMetadata: 
        return .keyword(._alwaysEmitConformanceMetadata)
      case ._expose: 
        return .keyword(._expose)
      case .typeWrapper: 
        return .keyword(.typeWrapper)
      case ._spiOnly: 
        return .keyword(._spiOnly)
      case ._documentation: 
        return .keyword(._documentation)
      case .typeWrapperIgnored: 
        return .keyword(.typeWrapperIgnored)
      case ._noMetadata: 
        return .keyword(._noMetadata)
      case .runtimeMetadata: 
        return .keyword(.runtimeMetadata)
      case ._spi_available: 
        return .keyword(._spi_available)
      }
    }
  }
}
