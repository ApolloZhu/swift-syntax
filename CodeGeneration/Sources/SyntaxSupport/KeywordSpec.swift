//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2022 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://swift.org/LICENSE.txt for license information
// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//

public struct ContextualKeywordSpec {
  public var name: String
  public var isLexerClassified: Bool
  public var requiresLeadingSpace: Bool
  public var requiresTrailingSpace: Bool

  public var escapedName: String {
    if isLexerClassified || name == "Type" || name == "Protocol" {
      return "`\(name)`"
    } else {
      return name
    }
  }

  /// `isLexerClassified` determines whether the token kind is switched from being an identifier to a keyword in the lexer.
  /// This is true for keywords that used to be considered non-contextual.
  init(_ name: String, isLexerClassified: Bool = false, requiresLeadingSpace: Bool = false, requiresTrailingSpace: Bool = false) {
    self.name = name
    self.isLexerClassified = isLexerClassified
    self.requiresLeadingSpace = requiresLeadingSpace
    self.requiresTrailingSpace = requiresTrailingSpace
  }
}

public let KEYWORDS: [ContextualKeywordSpec] = [
  // Please keep these sorted alphabetically
  
  ContextualKeywordSpec("__consuming"),
  ContextualKeywordSpec("__objc_bridged"),
  ContextualKeywordSpec("__owned"),
  ContextualKeywordSpec("__raw_doc_comment"),
  ContextualKeywordSpec("__setter_access"),
  ContextualKeywordSpec("__shared"),
  ContextualKeywordSpec("__synthesized_protocol"),
  ContextualKeywordSpec("_alignment"),
  ContextualKeywordSpec("_alwaysEmitConformanceMetadata"),
  ContextualKeywordSpec("_alwaysEmitIntoClient"),
  ContextualKeywordSpec("_assemblyVision"),
  ContextualKeywordSpec("_backDeploy"),
  ContextualKeywordSpec("_borrow"),
  ContextualKeywordSpec("_borrowed"),
  ContextualKeywordSpec("_cdecl"),
  ContextualKeywordSpec("_clangImporterSynthesizedType"),
  ContextualKeywordSpec("_Class"),
  ContextualKeywordSpec("_compilerInitialized"),
  ContextualKeywordSpec("_const"),
  ContextualKeywordSpec("_custom"),
  ContextualKeywordSpec("_disfavoredOverload"),
  ContextualKeywordSpec("_documentation"),
  ContextualKeywordSpec("_dynamicReplacement"),
  ContextualKeywordSpec("_eagerMove"),
  ContextualKeywordSpec("_effects"),
  ContextualKeywordSpec("_exported"),
  ContextualKeywordSpec("_expose"),
  ContextualKeywordSpec("_fixed_layout"),
  ContextualKeywordSpec("_forbidSerializingReference"),
  ContextualKeywordSpec("_forward"),
  ContextualKeywordSpec("_frozen"),
  ContextualKeywordSpec("_hasInitialValue"),
  ContextualKeywordSpec("_hasMissingDesignatedInitializers"),
  ContextualKeywordSpec("_hasStorage"),
  ContextualKeywordSpec("_implementationOnly"),
  ContextualKeywordSpec("_implements"),
  ContextualKeywordSpec("_implicitSelfCapture"),
  ContextualKeywordSpec("_inheritActorContext"),
  ContextualKeywordSpec("_inheritsConvenienceInitializers"),
  ContextualKeywordSpec("_linear"),
  ContextualKeywordSpec("_local"),
  ContextualKeywordSpec("_marker"),
  ContextualKeywordSpec("_modify"),
  ContextualKeywordSpec("_move"),
  ContextualKeywordSpec("_moveOnly"),
  ContextualKeywordSpec("_NativeClass"),
  ContextualKeywordSpec("_NativeRefCountedObject"),
  ContextualKeywordSpec("_noAllocation"),
  ContextualKeywordSpec("_noEagerMove"),
  ContextualKeywordSpec("_noImplicitCopy"),
  ContextualKeywordSpec("_noLocks"),
  ContextualKeywordSpec("_noMetadata"),
  ContextualKeywordSpec("_nonEphemeral"),
  ContextualKeywordSpec("_nonoverride"),
  ContextualKeywordSpec("_nonSendable"),
  ContextualKeywordSpec("_objc_non_lazy_realization"),
  ContextualKeywordSpec("_objcImplementation"),
  ContextualKeywordSpec("_objcRuntimeName"),
  ContextualKeywordSpec("_opaqueReturnTypeOf"),
  ContextualKeywordSpec("_optimize"),
  ContextualKeywordSpec("_originallyDefinedIn"),
  ContextualKeywordSpec("_PackageDescription"),
  ContextualKeywordSpec("_private"),
  ContextualKeywordSpec("_projectedValueProperty"),
  ContextualKeywordSpec("_read"),
  ContextualKeywordSpec("_RefCountedObject"),
  ContextualKeywordSpec("_restatedObjCConformance"),
  ContextualKeywordSpec("_semantics"),
  ContextualKeywordSpec("_show_in_interface"),
  ContextualKeywordSpec("_silgen_name"),
  ContextualKeywordSpec("_specialize"),
  ContextualKeywordSpec("_specializeExtension"),
  ContextualKeywordSpec("_spi"),
  ContextualKeywordSpec("_spi_available"),
  ContextualKeywordSpec("_spiOnly"),
  ContextualKeywordSpec("_staticInitializeObjCMetadata"),
  ContextualKeywordSpec("_swift_native_objc_runtime_base"),
  ContextualKeywordSpec("_transparent"),
  ContextualKeywordSpec("_Trivial"),
  ContextualKeywordSpec("_TrivialAtMost"),
  ContextualKeywordSpec("_typeEraser"),
  ContextualKeywordSpec("_unavailableFromAsync"),
  ContextualKeywordSpec("_UnknownLayout"),
  ContextualKeywordSpec("_unsafeInheritExecutor"),
  ContextualKeywordSpec("_weakLinked"),
  ContextualKeywordSpec("actor"),
  ContextualKeywordSpec("addressWithNativeOwner"),
  ContextualKeywordSpec("addressWithOwner"),
  ContextualKeywordSpec("any"),
  ContextualKeywordSpec("Any", isLexerClassified: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("as", isLexerClassified: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("assignment"),
  ContextualKeywordSpec("associatedtype", isLexerClassified: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("associativity"),
  ContextualKeywordSpec("async", requiresTrailingSpace: true),
  ContextualKeywordSpec("autoclosure"),
  ContextualKeywordSpec("availability"),
  ContextualKeywordSpec("available"),
  ContextualKeywordSpec("await"),
  ContextualKeywordSpec("break", isLexerClassified: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("case", isLexerClassified: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("catch", isLexerClassified: true, requiresLeadingSpace: true),
  ContextualKeywordSpec("class", isLexerClassified: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("continue", isLexerClassified: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("convenience"),
  ContextualKeywordSpec("convention"),
  ContextualKeywordSpec("default", isLexerClassified: true),
  ContextualKeywordSpec("defer", isLexerClassified: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("deinit", isLexerClassified: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("deprecated"),
  ContextualKeywordSpec("derivative"),
  ContextualKeywordSpec("didSet"),
  ContextualKeywordSpec("differentiable"),
  ContextualKeywordSpec("discardableResult"),
  ContextualKeywordSpec("distributed"),
  ContextualKeywordSpec("do", isLexerClassified: true),
  ContextualKeywordSpec("dynamic"),
  ContextualKeywordSpec("dynamicCallable"),
  ContextualKeywordSpec("dynamicMemberLookup"),
  ContextualKeywordSpec("each"),
  ContextualKeywordSpec("else", isLexerClassified: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("enum", isLexerClassified: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("escaping"),
  ContextualKeywordSpec("exclusivity"),
  ContextualKeywordSpec("exported"),
  ContextualKeywordSpec("extension", isLexerClassified: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("fallthrough", isLexerClassified: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("false", isLexerClassified: true),
  ContextualKeywordSpec("fileprivate", isLexerClassified: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("final"),
  ContextualKeywordSpec("for", isLexerClassified: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("frozen"),
  ContextualKeywordSpec("func", isLexerClassified: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("get"),
  ContextualKeywordSpec("GKInspectable"),
  ContextualKeywordSpec("globalActor"),
  ContextualKeywordSpec("guard", isLexerClassified: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("higherThan"),
  ContextualKeywordSpec("IBAction"),
  ContextualKeywordSpec("IBDesignable"),
  ContextualKeywordSpec("IBInspectable"),
  ContextualKeywordSpec("IBOutlet"),
  ContextualKeywordSpec("IBSegueAction"),
  ContextualKeywordSpec("if", isLexerClassified: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("import", isLexerClassified: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("in", isLexerClassified: true, requiresLeadingSpace: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("indirect"),
  ContextualKeywordSpec("infix"),
  ContextualKeywordSpec("init", isLexerClassified: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("inlinable"),
  ContextualKeywordSpec("inline"),
  ContextualKeywordSpec("inout", isLexerClassified: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("internal", isLexerClassified: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("introduced"),
  ContextualKeywordSpec("is", isLexerClassified: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("isolated"),
  ContextualKeywordSpec("kind"),
  ContextualKeywordSpec("lazy"),
  ContextualKeywordSpec("let", isLexerClassified: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("LLDBDebuggerFunction"),
  ContextualKeywordSpec("lowerThan"),
  ContextualKeywordSpec("macro"),
  ContextualKeywordSpec("main"),
  ContextualKeywordSpec("message"),
  ContextualKeywordSpec("mutableAddressWithNativeOwner"),
  ContextualKeywordSpec("mutableAddressWithOwner"),
  ContextualKeywordSpec("mutating"),
  ContextualKeywordSpec("nil", isLexerClassified: true),
  ContextualKeywordSpec("noasync"),
  ContextualKeywordSpec("noDerivative"),
  ContextualKeywordSpec("noescape"),
  ContextualKeywordSpec("nonisolated"),
  ContextualKeywordSpec("nonmutating"),
  ContextualKeywordSpec("nonobjc"),
  ContextualKeywordSpec("NSApplicationMain"),
  ContextualKeywordSpec("NSCopying"),
  ContextualKeywordSpec("NSManaged"),
  ContextualKeywordSpec("objc"),
  ContextualKeywordSpec("objcMembers"),
  ContextualKeywordSpec("obsoleted"),
  ContextualKeywordSpec("of"),
  ContextualKeywordSpec("open"),
  ContextualKeywordSpec("operator", isLexerClassified: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("optional"),
  ContextualKeywordSpec("override"),
  ContextualKeywordSpec("package"),
  ContextualKeywordSpec("postfix"),
  ContextualKeywordSpec("precedencegroup", isLexerClassified: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("preconcurrency"),
  ContextualKeywordSpec("prefix"),
  ContextualKeywordSpec("private", isLexerClassified: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("propertyWrapper"),
  ContextualKeywordSpec("Protocol"),
  ContextualKeywordSpec("protocol", isLexerClassified: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("public", isLexerClassified: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("reasync"),
  ContextualKeywordSpec("renamed"),
  ContextualKeywordSpec("repeat", isLexerClassified: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("required"),
  ContextualKeywordSpec("requires_stored_property_inits"),
  ContextualKeywordSpec("resultBuilder"),
  ContextualKeywordSpec("rethrows", isLexerClassified: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("return", isLexerClassified: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("reverse"),
  ContextualKeywordSpec("runtimeMetadata"),
  ContextualKeywordSpec("safe"),
  ContextualKeywordSpec("self", isLexerClassified: true),
  ContextualKeywordSpec("Self", isLexerClassified: true),
  ContextualKeywordSpec("Sendable"),
  ContextualKeywordSpec("set"),
  ContextualKeywordSpec("some"),
  ContextualKeywordSpec("spi"),
  ContextualKeywordSpec("spiModule"),
  ContextualKeywordSpec("static", isLexerClassified: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("struct", isLexerClassified: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("subscript", isLexerClassified: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("super", isLexerClassified: true),
  ContextualKeywordSpec("swift"),
  ContextualKeywordSpec("switch", isLexerClassified: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("target"),
  ContextualKeywordSpec("testable"),
  ContextualKeywordSpec("throw", isLexerClassified: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("throws", isLexerClassified: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("transpose"),
  ContextualKeywordSpec("true", isLexerClassified: true),
  ContextualKeywordSpec("try", isLexerClassified: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("Type"),
  ContextualKeywordSpec("typealias", isLexerClassified: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("typeWrapper"),
  ContextualKeywordSpec("typeWrapperIgnored"),
  ContextualKeywordSpec("UIApplicationMain"),
  ContextualKeywordSpec("unavailable"),
  ContextualKeywordSpec("unchecked"),
  ContextualKeywordSpec("unowned"),
  ContextualKeywordSpec("unsafe"),
  ContextualKeywordSpec("unsafe_no_objc_tagged_pointer"),
  ContextualKeywordSpec("unsafeAddress"),
  ContextualKeywordSpec("unsafeMutableAddress"),
  ContextualKeywordSpec("usableFromInline"),
  ContextualKeywordSpec("var", isLexerClassified: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("warn_unqualified_access"),
  ContextualKeywordSpec("weak"),
  ContextualKeywordSpec("where", isLexerClassified: true, requiresLeadingSpace: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("while", isLexerClassified: true, requiresTrailingSpace: true),
  ContextualKeywordSpec("willSet"),
  ContextualKeywordSpec("witness_method"),
  ContextualKeywordSpec("wrt"),
  ContextualKeywordSpec("yield"),
]

public func keywordsByLength() -> [(Int, [ContextualKeywordSpec])] {
  var result: [Int: [ContextualKeywordSpec]] = [:]
  for keyword in KEYWORDS {
    result[keyword.name.count, default: []].append(keyword)
  }
  return result.sorted(by: { $0.key < $1.key })
}
