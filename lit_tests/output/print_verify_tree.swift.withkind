<SourceFileSyntax><CodeBlockItemListSyntax><CodeBlockItemSyntax><FunctionDeclSyntax>// RUN: %empty-directory(%t)
// RUN: %lit-test-helper -print-tree -source-file %s > %t.result
// RUN: diff -u %t.result %S/output/print_verify_tree.swift.withkind

func </TokenSyntax>foo</TokenSyntax><FunctionSignatureSyntax><ParameterClauseSyntax>(</TokenSyntax><FunctionParameterListSyntax></FunctionParameterListSyntax>) </TokenSyntax></ParameterClauseSyntax></FunctionSignatureSyntax><CodeBlockSyntax>{</TokenSyntax><CodeBlockItemListSyntax><CodeBlockItemSyntax><IfConfigDeclSyntax><IfConfigClauseListSyntax><IfConfigClauseSyntax>
#if </TokenSyntax><FunctionCallExprSyntax><IdentifierExprSyntax>swift</TokenSyntax></IdentifierExprSyntax>(</TokenSyntax><FunctionCallArgumentListSyntax><FunctionCallArgumentSyntax><PrefixOperatorExprSyntax>>=</TokenSyntax><FloatLiteralExprSyntax>3.2</TokenSyntax></FloatLiteralExprSyntax></PrefixOperatorExprSyntax></FunctionCallArgumentSyntax></FunctionCallArgumentListSyntax>)</TokenSyntax></FunctionCallExprSyntax><CodeBlockItemListSyntax><CodeBlockItemSyntax><FunctionCallExprSyntax><MemberAccessExprSyntax><IdentifierExprSyntax>
    components</TokenSyntax></IdentifierExprSyntax>.</TokenSyntax>append</TokenSyntax></MemberAccessExprSyntax>(</TokenSyntax><FunctionCallArgumentListSyntax><FunctionCallArgumentSyntax><StringInterpolationExprSyntax>"</TokenSyntax><StringInterpolationSegmentsSyntax><StringSegmentSyntax>-b \"</TokenSyntax></StringSegmentSyntax><ExpressionSegmentSyntax>\</TokenSyntax>(</TokenSyntax><SubscriptExprSyntax><IdentifierExprSyntax>string</TokenSyntax></IdentifierExprSyntax>[</TokenSyntax><FunctionCallArgumentListSyntax><FunctionCallArgumentSyntax><PrefixOperatorExprSyntax>..<</TokenSyntax><FunctionCallExprSyntax><MemberAccessExprSyntax><IdentifierExprSyntax>string</TokenSyntax></IdentifierExprSyntax>.</TokenSyntax>index</TokenSyntax></MemberAccessExprSyntax>(</TokenSyntax><FunctionCallArgumentListSyntax><FunctionCallArgumentSyntax>before</TokenSyntax>: </TokenSyntax><MemberAccessExprSyntax><IdentifierExprSyntax>string</TokenSyntax></IdentifierExprSyntax>.</TokenSyntax>endIndex</TokenSyntax></MemberAccessExprSyntax></FunctionCallArgumentSyntax></FunctionCallArgumentListSyntax>)</TokenSyntax></FunctionCallExprSyntax></PrefixOperatorExprSyntax></FunctionCallArgumentSyntax></FunctionCallArgumentListSyntax>]</TokenSyntax></SubscriptExprSyntax>)</TokenSyntax></ExpressionSegmentSyntax><StringSegmentSyntax>\"</TokenSyntax></StringSegmentSyntax></StringInterpolationSegmentsSyntax>"</TokenSyntax></StringInterpolationExprSyntax></FunctionCallArgumentSyntax></FunctionCallArgumentListSyntax>)</TokenSyntax></FunctionCallExprSyntax></CodeBlockItemSyntax></CodeBlockItemListSyntax></IfConfigClauseSyntax><IfConfigClauseSyntax>
#else</TokenSyntax><CodeBlockItemListSyntax><CodeBlockItemSyntax><FunctionCallExprSyntax><MemberAccessExprSyntax><IdentifierExprSyntax>
    components</TokenSyntax></IdentifierExprSyntax>.</TokenSyntax>append</TokenSyntax></MemberAccessExprSyntax>(</TokenSyntax><FunctionCallArgumentListSyntax><FunctionCallArgumentSyntax><StringInterpolationExprSyntax>"</TokenSyntax><StringInterpolationSegmentsSyntax><StringSegmentSyntax>-b \"</TokenSyntax></StringSegmentSyntax><ExpressionSegmentSyntax>\</TokenSyntax>(</TokenSyntax><FunctionCallExprSyntax><MemberAccessExprSyntax><IdentifierExprSyntax>string</TokenSyntax></IdentifierExprSyntax>.</TokenSyntax>substring</TokenSyntax></MemberAccessExprSyntax>(</TokenSyntax><FunctionCallArgumentListSyntax><FunctionCallArgumentSyntax>to</TokenSyntax>: </TokenSyntax><FunctionCallExprSyntax><MemberAccessExprSyntax><MemberAccessExprSyntax><IdentifierExprSyntax>string</TokenSyntax></IdentifierExprSyntax>.</TokenSyntax>characters</TokenSyntax></MemberAccessExprSyntax>.</TokenSyntax>index</TokenSyntax></MemberAccessExprSyntax>(</TokenSyntax><FunctionCallArgumentListSyntax><FunctionCallArgumentSyntax>before</TokenSyntax>: </TokenSyntax><MemberAccessExprSyntax><IdentifierExprSyntax>string</TokenSyntax></IdentifierExprSyntax>.</TokenSyntax>endIndex</TokenSyntax></MemberAccessExprSyntax></FunctionCallArgumentSyntax></FunctionCallArgumentListSyntax>)</TokenSyntax></FunctionCallExprSyntax></FunctionCallArgumentSyntax></FunctionCallArgumentListSyntax>)</TokenSyntax></FunctionCallExprSyntax>)</TokenSyntax></ExpressionSegmentSyntax><StringSegmentSyntax>\"</TokenSyntax></StringSegmentSyntax></StringInterpolationSegmentsSyntax>"</TokenSyntax></StringInterpolationExprSyntax></FunctionCallArgumentSyntax></FunctionCallArgumentListSyntax>)</TokenSyntax></FunctionCallExprSyntax></CodeBlockItemSyntax></CodeBlockItemListSyntax></IfConfigClauseSyntax></IfConfigClauseListSyntax>
#endif</TokenSyntax></IfConfigDeclSyntax></CodeBlockItemSyntax></CodeBlockItemListSyntax>
}</TokenSyntax></CodeBlockSyntax></FunctionDeclSyntax></CodeBlockItemSyntax></CodeBlockItemListSyntax></TokenSyntax></SourceFileSyntax>